<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" 
xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" 
xmlns:http="http://www.mulesoft.org/schema/mule/http" 
xmlns="http://www.mulesoft.org/schema/mule/core" 
xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
xmlns:spring="http://www.springframework.org/schema/beans" 
version="EE-3.7.1" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">

    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <flow name="triggerPushFlow"  initialState="started">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/" doc:name="HTTP"/>

        <choice doc:name="Trigger Policy">
            <when expression="#['push' == '${trigger.policy}']">
                <dw:transform-message doc:name="XML to User">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload.Envelope.Body.notifications.Notification.*sObject]]></dw:set-payload>
                </dw:transform-message>
                <logger message="Message from outbound : #[payload]" level="DEBUG" doc:name="Log input payload"/>
                <flow-ref name="mainFlow" doc:name="trigger mainFlow"/>
            </when>
            <otherwise>
                <logger message="Trigger policy has been set to POLL. Sikpping this message" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <set-payload value="&lt;soapenv:Envelope xmlns:soapenv='http://schemas.xmlsoap.org/soap/envelope/' xmlns:out='http://soap.sforce.com/2005/09/outbound'&gt;&lt;soapenv:Header/&gt;&lt;soapenv:Body&gt;&lt;out:notificationsResponse&gt;&lt;out:Ack&gt;true&lt;/out:Ack&gt;&lt;/out:notificationsResponse&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;" doc:name="set response body"/>

    </flow>

    <flow name="triggerFlow" processingStrategy="synchronous"    doc:description="This is the simpliest entry point to start the excecution of your Template
Here you should: 
	* Configure the inbound endpoint, in this case a polling to fetch data from origin system
	* Handle any input parameter and set the scope of it so the main logic does not care from where it is called
Here you should not: 
	* Run validations against external systems
	* Choose flow of you application based on input parameters">
    	<poll doc:name="fireup Users synchronization">
            <fixed-frequency-scheduler frequency="${poll.frequencyMillis}" startDelay="${poll.startDelayMillis}" />
            <watermark variable="lastQueryDate" default-expression="${watermark.default.expression}" selector="MAX" selector-expression="#[payload.LastModifiedDate]"/>
             <sfdc:query config-ref="SalesforceA" doc:name="query Users with filtering criteria from Salesforce Instance A" query="dsql:SELECT Alias,Email,EmailEncodingKey,FirstName,LanguageLocaleKey,LastModifiedDate,LastName,LocaleSidKey,ProfileId,TimeZoneSidKey,Title,Username FROM User WHERE (LastModifiedDate &gt; #[lastQueryDate] AND IsActive = true)">
            </sfdc:query>
        </poll>
        <logger message="#[payload]" level="INFO" doc:name="log created/updated Users"/>
        <choice doc:name="Trigger Policy">
            <when expression="#['poll' == '${trigger.policy}']">
                <flow-ref name="mainFlow" doc:name="trigger mainFlow"/>
            </when>
            <otherwise>
                <logger message="Trigger policy has been set to PUSH. Skipping this message." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
    </flow>
    
</mule>
